use DataWarehouse;
GO


-------------------------------------------------Data Base Exploration ----------------------------------------------------------------


---Explore All Objects in the Database
select * from information_schema.tables

---Explore All Objects in the Database
select * from information_schema.columns

---Explore All the columns in a specific table
select * from information_schema.columns where table_name = 'dim_customers'
select * from information_schema.columns where table_name = 'dim_products'
select * from information_schema.columns where table_name = 'fact_sales'
GO


------------------------------------------------------ Dimensions Exploration ---------------------------------------------------------

---Explore all the coutries our customers are from
select distinct country from gold.dim_customers

---Explore all categories ("The major Divisons")
select distinct category,sub_category,product_name from gold.dim_products
ORDER BY 1,2,3


------------------------------------------------------ Date Exploration ------------------------------------------------------------------

---Find the earliest and latest order dates
---How many years of sales data are available
select
    min(order_date) as first_order_date,
    max(order_date) as last_order_date,
    DATEDIFF(MONTH,MIN(order_date),MAX(order_date)) as oreder_range_months
from gold.fact_sales 


---Find the youngest & oldest customer
SELECT
MIN(birthdates) as oldest_birthdate,
DATEDIFF(YEAR,MIN(birthdates),GETDATE()) as oldest_age,
MAX(birthdates) as youngest_birthdate,
DATEDIFF(YEAR,MAX(birthdates),GETDATE()) as youngest_age
from gold.dim_customers



------------------------------------Measures Exploration----------------------------------------------------------------------------

-- Find the Total Sales
SELECT SUM(sales_amount) as total_sales from gold.fact_sales;

-- Find how many items are sold
SELECT SUM(quantity) as total_qty from gold.fact_sales;

-- Find the average selling price
SELECT AVG(price) as avg_price from gold.fact_sales;

-- Find the Total number of Orders
    --SELECT COUNT(order_number) as repeat_total_orders from gold.fact_sales;
SELECT COUNT(DISTINCT order_number) as total_orders from gold.fact_sales;

-- Find the total number of products
    --select count(product_key) as total_products from gold.dim_products;
select count(distinct product_key) as total_products from gold.dim_products

-- Find the total number of customers
SELECT COUNT(customer_key) as total_customers from gold.dim_customers
SELECT count(distinct customer_key) as total_customers from gold.dim_customers

-- Find the total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) as total_customers from gold.fact_sales


---Generate a Report that shows all the key metrics of the business
SELECT 'Total Sales' as measure_name, SUM(sales_amount) as meaure_value from gold.fact_sales
UNION ALL
SELECT 'Total Quantity' as measure_name, SUM(quantity) as meaure_value from gold.fact_sales
UNION ALL
SELECT 'Average Price' as measure_name, AVG(price) as meaure_value from gold.fact_sales
UNION ALL
SELECT 'Total Nr. Orders' as measure_name, COUNT(DISTINCT order_number) as meaure_value from gold.fact_sales
UNION ALL
SELECT 'Total Nr. Products' as measure_name, COUNT(distinct product_key) as meaure_value from gold.dim_products
UNION ALL
SELECT 'Total Nr. Customers' as measure_name, COUNT(distinct customer_key) as meaure_value from gold.dim_customers
UNION ALL
SELECT 'Total Customers with Orders' as measure_name, COUNT(distinct customer_key) as meaure_value from gold.fact_sales


--------------------------------------------Magnitude Analysis----------------------------------------------------------------------------


-- Find total customers by countries
select country, count(distinct customer_key) as total_customers from gold.dim_customers
group by country
ORDER BY total_customers DESC;


-- Find total customers by gender
select gender, count(distinct customer_key) as total_customers from gold.dim_customers
group by gender
ORDER BY total_customers DESC;


-- Find total products by category
select category, count(distinct product_key) as total_products from gold.dim_products
group by category
ORDER BY total_products DESC;


-- What is the average costs in each category?
select category, avg(cost) as avg_cost from gold.dim_products
group by category
ORDER BY avg_cost DESC;


-- What is the total revenue generated for each category?
select 
p.category, sum(f.sales_amount) as total_revenue 
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on f.product_key = p.product_key
group by category
ORDER BY total_revenue DESC;

-- Find total revenue is generated by each customer
select
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
LEFT JOIN gold.dim_customers c
on f.customer_key = c.customer_key
group by c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC;


-- What is the distribution of sold items across countries?
SELECT
c.country,
sum(f.quantity) as total_quantity
from gold.fact_sales f
LEFT JOIN gold.dim_customers c
on f.customer_key = c.customer_key
group by c.country
ORDER BY total_quantity DESC;




---------------------------------------------------------------Ranking Analysis -------------------------------------------------------------

---Which 5 products generate the highest revenue?
SELECT top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on f.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC

--or
SELECT * from (
SELECT top 5
p.product_name,
sum(f.sales_amount) as total_revenue,
ROW_NUMBER() OVER (ORDER BY sum(f.sales_amount) DESC) as rank_product
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on f.product_key = p.product_key
GROUP BY p.product_name
) t
WHERE rank_product <= 5



---What are the 5 worst-performing products in terms of sales?
SELECT top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on f.product_key = p.product_key
GROUP BY p.product_name
ORDER BY total_revenue



---Which 5 subcategories generate the highest revenue?
SELECT top 5
p.sub_category,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
LEFT JOIN gold.dim_products p
on f.product_key = p.product_key
GROUP BY p.sub_category
ORDER BY total_revenue DESC


--Find the top 10 customers who have generated the highest revenue
SELECT top 10
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
LEFT JOIN gold.dim_customers c
on f.customer_key = c.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC


--Find the 3 customers with the fewest orders placed
SELECT top 3
c.customer_key,
c.first_name,
c.last_name,
count(distinct f.order_number) as total_orders
from gold.fact_sales f
LEFT JOIN gold.dim_customers c
on f.customer_key = c.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_orders



SELECT * from gold.fact_sales;